@typeparam TItem
@using System.Diagnostics.CodeAnalysis

<table class="table">
    @if (TableHeader != null)
    {
        <thead>
            <tr>@TableHeader</tr>
        </thead>
    }
    <tbody>
        @if (BusyTemplate != null && Busy)
        {
            <tr>
                @BusyTemplate
            </tr>
        }
        else if (EmptyTemplate != null && Items == null || !Items.Any())
        {
            <tr>
                @EmptyTemplate
            </tr>
        }
        else
        {
            @foreach (var item in Items)
            {
                if (RowTemplate is not null)
                {
                    <tr>@RowTemplate(item)</tr>
                }
            }
        }
    </tbody>
</table>

@code {
    [Parameter]
    public RenderFragment? TableHeader { get; set; }

    [Parameter]
    public RenderFragment<TItem>? RowTemplate { get; set; }

    [Parameter, AllowNull]
    public IReadOnlyList<TItem> Items { get; set; }

    [Parameter]
    public RenderFragment? BusyTemplate { get; set; }

    [Parameter]
    public RenderFragment? EmptyTemplate { get; set; }

    [Parameter]
    public bool Busy { get; set; }

    [Parameter]
    public string Class { get; set; } = "";
}
