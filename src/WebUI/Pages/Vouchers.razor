@page "/vouchers"
@using ApplicationCore.Vouchers

<BSRow class="mb-4">
    <BSCol>
        <h1>Vouchers</h1>
    </BSCol>
    <BSCol Auto="true">
        <BSButton Color="BSColor.Primary" OnClick="CreateVoucher">Create new voucher</BSButton>
    </BSCol>
</BSRow>

<div>@pageNumber</div>

<BSTable>
    <BSTHead>
        <BSTR>
            <BSTD>ID</BSTD>
            <BSTD>Code</BSTD>
        </BSTR>
    </BSTHead>
    <BSTBody>
        @if (voucherReponse?.Vouchers.Items == null)
        {
            <BSTR>
                <BSTD colspan="2">
                    <BSAlert Color="BSColor.Warning">Did not find any vouchers.</BSAlert>
                </BSTD>
            </BSTR>
        }
        else
        {
            @foreach (var voucher in voucherReponse.Vouchers.Items)
            {
                <BSTR>
                    <BSTD>@voucher.Id</BSTD>
                    <BSTD>@voucher.Code</BSTD>
                </BSTR>
            }
        }
    </BSTBody>
</BSTable>

<BSPagination Pages="totalPages" Value="pageNumber" ValueChanged="GetVouchers" />

@code {
    [Inject]
    public ISender Mediator { get; set; } = null!;

    private int pageNumber = 1;
    private int pageSize = 10;
    private int totalPages => voucherReponse?.Vouchers.TotalPages ?? 0;

    private GetVouchersWithPaginationQueryResponse? voucherReponse;
    private bool fetchingVouchers = true;

    protected override async Task OnParametersSetAsync()
    {
        await GetVouchers(pageNumber);
    }

    private async Task GetVouchers(int page)
    {
        pageNumber = page;
        fetchingVouchers = true;
        var query = new GetVouchersWithPaginationQuery()
            {
                PageNumber = pageNumber,
                PageSize = pageSize,
            };
        voucherReponse = await Mediator.Send(query);
        fetchingVouchers = false;
    }

    private async Task<int> CreateVoucher()
    {
        var voucherId = await Mediator.Send(new CreateVoucherCommand());
        await GetVouchers(pageNumber);
        return voucherId;
    }
}
